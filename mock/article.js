// 代码中会兼容本地 service mock 以及部署站点的静态数据
export default {
  'GET /public/article/query': {
    'code': 200, 'message': 'OK', 'data': {
      'content': [{
        'id': 2,
        'createAt': 1566900648297,
        'updateAt': 1566900648542,
        'title': '第二篇博客 <hr> ===xxx...}}{{\\\\//',
        'preview': '123\n<br>\n<hr>\n123\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\nhahaha\n\n \n',
        'parseType': 'draft-0.0.1',
        'hash': 'b0ad077b25b2c7f413d2af468042c1d8',
        'author': {
          'version': 0,
          'createAt': 1566212855381,
          'updateAt': 1566212855365,
          'isDeleted': false,
          'id': 'root@app',
          'username': 'root',
          'nickname': 'root',
          'appId': 'app',
        },
        'articleInfo': {
          'version': 0,
          'createAt': 1566900648508,
          'isDeleted': false,
          'id': 2,
          'like': 0,
          'dislike': 0,
          'star': 0,
          'comment': 0,
          'trans': 0,
          'read': 0,
        },
      }, {
        'id': 1,
        'createAt': 1566212855503,
        'updateAt': 1566212855929,
        'title': '测试环境发的第一篇博客--001',
        'parseType': 'draft-0.0.1',
        'hash': 'af985955eedf0f9ced363683f9d020cc',
        'author': {
          'version': 0,
          'createAt': 1566212855381,
          'updateAt': 1566212855365,
          'isDeleted': false,
          'id': 'root@app',
          'username': 'root',
          'nickname': 'root',
          'appId': 'app',
        },
        'articleInfo': {
          'version': 0,
          'createAt': 1566212855854,
          'isDeleted': false,
          'id': 1,
          'like': 0,
          'dislike': 0,
          'star': 0,
          'comment': 0,
          'trans': 0,
          'read': 0,
        },
      }],
      'pageable': {
        'sort': { 'unsorted': false, 'sorted': true, 'empty': false },
        'pageSize': 5,
        'pageNumber': 0,
        'offset': 0,
        'paged': true,
        'unpaged': false,
      },
      'totalPages': 1,
      'totalElements': 2,
      'last': true,
      'sort': { 'unsorted': false, 'sorted': true, 'empty': false },
      'numberOfElements': 2,
      'first': true,
      'size': 5,
      'number': 0,
      'empty': false,
    },
  },

  'GET /public/article': (req, res) => {
    console.log(req.query)
    if (req.query && req.query.id && req.query.id == 2) {
      res.status(200).send({
        'code': 200, 'message': 'OK', 'data': {
          'id': 2,
          'createAt': 1566900648297,
          'updateAt': 1566900648542,
          'title': '第二篇博客 <hr> ===xxx...}}{{\\\\//',
          'text': '',
          'preview': '123\n<br>\n<hr>\n123\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\nhahaha\n\n \n',
          'parseType': 'draft-0.0.1',
          'hash': 'b0ad077b25b2c7f413d2af468042c1d8',
          'author': {
            'version': 0,
            'createAt': 1566212855381,
            'updateAt': 1566212855365,
            'isDeleted': false,
            'id': 'root@app',
            'username': 'root',
            'nickname': 'root',
            'appId': 'app',
          },
          'articleInfo': {
            'version': 0,
            'createAt': 1566900648508,
            'isDeleted': false,
            'id': 2,
            'like': 0,
            'dislike': 0,
            'star': 0,
            'comment': 0,
            'trans': 0,
            'read': 0,
          },
        },
      })
    }
    if (req.query && req.query.id && req.query.id == 1) {
      res.status(200).send({
        'code': 200, 'message': 'OK', 'data': {
          'id': 1,
          'createAt': 1566212855503,
          'updateAt': 1566212855929,
          'title': '测试环境发的第一篇博客--001',
          'text': 'PHA+8J+ko/CfmYzwn5Ka8J+Sm/CfkY/wn5iJ8J+Sr/CfkpXwn5Ke8J+SmPCfkpnwn5KZ8J+WpPCfkpzinaTvuI/wn5iN8J+Yu/CfkpPwn5KX8J+Yi/CfmIfwn5iC8J+YufCfmJjwn5KW8J+YgfCfmIDwn6Se8J+YsvCfmITwn5iK8J+RjfCfmIzwn5iD8J+YheKcjO+4j/CfpJfwn5KL8J+Yl/CfmL3wn5i98J+koPCfmJnwn5i68J+RhPCfmLjwn5iP8J+YvPCfkYzwn5iO8J+YhvCfmJvwn5mP8J+knfCfmYLwn6SR8J+YnfCfmJDwn5iR8J+kpDwvcD48cD7wn5ik8J+Zg/CfpKHwn5i28J+YqvCfmLTwn5i18J+Yk/CfkYrwn5im8J+Yt/CfpJDwn5ic8J+kk/Cfkbvwn5il8J+ZhPCfpJTwn6SS8J+ZgfCfmJTwn5iv4pi577iP4pig77iP8J+YsPCfmKnwn5iW8J+YlfCfmJLwn5ij8J+YovCfmK7wn5i/8J+kp/CfmKvwn6Sl8J+YnvCfmKzwn5GO8J+SgPCfmLPwn5io8J+klfCfpKLwn5ix8J+YrfCfmKDwn5iI8J+Yp/CfkpTwn5if8J+ZgPCfkqnwn5G/8J+YofCfmL7wn5aVPC9wPg==',
          'parseType': 'draft-0.0.1',
          'hash': 'af985955eedf0f9ced363683f9d020cc',
          'author': {
            'version': 0,
            'createAt': 1566212855381,
            'updateAt': 1566212855365,
            'isDeleted': false,
            'id': 'root@app',
            'username': 'root',
            'nickname': 'root',
            'appId': 'app',
          },
          'articleInfo': {
            'version': 0,
            'createAt': 1566212855854,
            'isDeleted': false,
            'id': 1,
            'like': 0,
            'dislike': 0,
            'star': 0,
            'comment': 0,
            'trans': 0,
            'read': 0,
          },
        },
      })
    }
  },
  'GET /public/articleComment': (req, res) => {
    console.log(req.query)
    if (req.query && req.query.id && req.query.id == 1) {
      res.status(200).send({
        'code': 200, 'message': 'OK', 'data': {
          'content': [{
            'id': 14,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '10',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 13,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '9',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 12,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '8',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 11,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '7',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 10,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '6',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 9,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '5',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 8,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '4',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 7,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '3',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 6,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '2',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 5,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '1',
            'parseType': '0.0.1',
            'hash': 'hash',
          }],
          'pageable': {
            'sort': { 'unsorted': false, 'sorted': true, 'empty': false },
            'pageSize': 10,
            'pageNumber': 0,
            'offset': 0,
            'paged': true,
            'unpaged': false,
          },
          'totalPages': 2,
          'totalElements': 14,
          'last': false,
          'sort': { 'unsorted': false, 'sorted': true, 'empty': false },
          'numberOfElements': 10,
          'first': true,
          'size': 10,
          'number': 0,
          'empty': false,
        },
      })
    }
    if (req.query && req.query.id && req.query.id == 2) {
      res.status(200).send({
        'code': 200,
        'message': 'OK',
        'data': {
          'content': [{
            'id': 16,
            'authorId': 'root@app',
            'authorUsername': 'root',
            'authorNickname': 'root',
            'authorAppId': 'app',
            'text': '评论加1',
            'parseType': '0.0.1',
            'hash': 'hash',
          }, {
            'id': 15,
            'authorId': 'dc0a6234-cac3-48ae-9635-f8034db99e4e',
            'authorUsername': '不愿透露姓名的网友',
            'text': '来自匿名用户的评论',
            'parseType': '0.0.1',
            'hash': 'hash',
          }],
          'pageable': {
            'sort': { 'unsorted': false, 'sorted': true, 'empty': false },
            'pageSize': 10,
            'pageNumber': 0,
            'offset': 0,
            'paged': true,
            'unpaged': false,
          },
          'totalPages': 1,
          'totalElements': 2,
          'last': true,
          'sort': { 'unsorted': false, 'sorted': true, 'empty': false },
          'numberOfElements': 2,
          'first': true,
          'size': 10,
          'number': 0,
          'empty': false,
        },
      })
    }
  },
}
